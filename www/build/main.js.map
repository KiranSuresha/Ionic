{"version":3,"sources":["../../src/pages/home/home.ts","../../node_modules/@angular/core/src/linker lazy","../../src/pages/signup/signup.ts","../../src/pages/reset-password/reset-password.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/auth-provider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAyC;AAC2C;AACvC;AACe;AACf;AACuB;AAMpE;IAQE,kBAAoB,OAAsB,EAAU,EAAe,EAAU,IAAkB;QAA3E,YAAO,GAAP,OAAO,CAAe;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAc;QAH/F,eAAU,GAAG,kEAAU,CAAC;QACxB,sBAAiB,GAAG,yFAAiB,EAAC,2BAA2B;QAG/D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvB,OAAO,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,uIAAuI,CAAC,CAAC,CAAC,CAAC;YACrN,UAAU,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACvF,CAAC,CAAC;QAEP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC;IAED,kCAAe,GAAf;QACE,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,UAAC,OAAO;YAC5C,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACvB,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAK,GAAL;QACI,EAAE,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,IAAI,WAAW,GAAG,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAC,CAAC,CAAC;YAC7E,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;gBAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC,EAAE,eAAK;gBACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,qBAAqB,CAAC,CACxC,CAAC;oBACC,KAAK,CAAC,gBAAgB,CAAC,CAAC;gBAC1B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,yBAAM,GAAN;QACE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IA/CL;QAFqE,2BAA2B;QAE/F,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACG;SACzB,CAAC;;gBAAA;IA6CF,CAAC;AAAD,CAAC,+B;;;;;;;ACvDD;AACA,+CAA+C,wDAAwD,EAAE;AACzG;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;;;;ACNyC;AAC2C;AAC5B;AACI;AACrB;AAMvC;IAME,oBAAmB,OAAsB,EAAS,SAAoB,EAAU,EAAe,EAAU,IAAkB;QAAxG,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAc;QAEzH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,OAAO,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,uIAAuI,CAAC,CAAC,CAAC,CAAC;YACrN,UAAU,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACrF,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAED,2BAAM,GAAN;QAAA,iBAgBC;QAfC,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACvB,IAAI,WAAW,GAAG,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAC,CAAC,CAAC;YAC7E,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,sBAAY;gBACtD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,KAAK,CAAC,mCAAmC,CAAC,CAAC;gBAC3C,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,4DAAQ,CAAC,CAAC;YACnC,CAAC,EAAE,uBAAa;gBACd,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,oBAAoB,IAAI,aAAa,CAAC,IAAI,KAAK,2BAA2B,CAAC,CACtG,CAAC;oBACC,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC/B,CAAC;gBACD,KAAI,CAAC,KAAK,GAAG,aAAa,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IArCH;QAAC,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACG;SAC3B,CAAC;;kBAAA;IAmCF,CAAC;AAAD,CAAC,iC;;;;;;;;;;;;;;;;;;;;;;;AC5CwC;AAC2C;AAC5B;AACI;AACrB;AAMvC;IAIE,2BAAmB,OAAsB,EAAS,SAAoB,EAAU,EAAe,EAAU,IAAkB;QAAxG,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAc;QAEzH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,OAAO,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,uIAAuI,CAAC,CAAC,CAAC,CAAC;SACxN,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC1D,CAAC;IAED,kCAAM,GAAN;QAAA,iBAaC;QAZC,EAAE,EAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,sBAAY;gBAC5D,KAAK,CAAC,iCAAiC,CAAC,CAAC;gBACzC,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,4DAAQ,CAAC,CAAC;YACnC,CAAC,EAAE,uBAAa;gBACd,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,qBAAqB,CAAC,CACjD,CAAC;oBACC,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC/B,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IA9BH;QAAC,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YACG;SACnC,CAAC;;yBAAA;IA4BF,CAAC;AAAD,CAAC,yC;;;;;;;;;;;ACrCyE;AAElC;AAExC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJE;AACkB;AACjC;AACM;AACM;AACuB;AAC1B;AACQ;AAEjD,IAAM,cAAc,GAAG;IAC5B,MAAM,EAAE,yCAAyC;IACjD,UAAU,EAAE,gCAAgC;IAC5C,WAAW,EAAE,uCAAuC;IACpD,aAAa,EAAE,4BAA4B;IAC3C,iBAAiB,EAAE,cAAc;CAClC,CAAC;AAsBF;IAAA;IAAwB,CAAC;IApBzB;QAAC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAK;gBACL,kEAAQ;gBACR,wEAAU;gBACV,+FAAiB,CAAC,2BAA2B;aAC9C;YACD,OAAO,EAAE;gBACP,kEAAW,CAAC,OAAO,CAAC,6DAAK,CAAC;gBAC1B,uEAAiB,CAAC,aAAa,CAAC,cAAc,CAAC;aAChD;YACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;YACrB,eAAe,EAAE;gBACf,6DAAK;gBACL,kEAAQ;gBACR,wEAAU;gBACV,+FAAiB,CAAC,2BAA2B;aAC9C;YACD,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC,EAAE,8EAAY,CAAC;SAChF,CAAC;;iBAAA;IACsB,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACrCgB;AACD;AACc;AAET;AACY;AAMzD;IAGE,eAAY,QAAkB,EAAS,IAAkB;QAAlB,SAAI,GAAJ,IAAI,CAAc;QAFzD,aAAQ,GAAG,kEAAQ,CAAC;QAGlB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,+DAAS,CAAC,YAAY,EAAE,CAAC;YACzB,kEAAY,CAAC,IAAI,EAAE,CAAC;YAEpB,gCAAgC;YAChC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,SAAS;gBAC9B,EAAE,CAAC,CAAC,SAAS,CAAC,EAAC;oBACb,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxD,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IApBH;QAAC,wEAAS,CAAC;YACc;SACxB,CAAC;;aAAA;IAmBF,CAAC;AAAD,CAAC,wC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7B+D;AACsC;AAC1D;AACJ;AACC;AACV;AAI/B;IAKE,sBAAoB,EAAe,EAAsB,QAAa,EAAS,QAAkB;QALnG,iBA0FC;QArFqB,OAAE,GAAF,EAAE,CAAa;QAA4C,aAAQ,GAAR,QAAQ,CAAU;QAH1F,WAAM,GAAoC,IAAI,mEAAY,EAAE,CAAC;QAIlE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAC,KAAwB;YAC9C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAe,GAAf;QAAA,iBA8BC;QA7BC,MAAM,CAAC,2DAAU,CAAC,MAAM,CAAC,kBAAQ;YAC/B,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,gEAAU,CAAC,KAAK,CAAC;oBACrB,aAAa,EAAC,0EAA0E,CAAC,gCAAgC;iBAC1H,CAAC,CAAC,IAAI,CAAC,kBAAQ;oBACd,IAAI,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;oBAC7B,IAAM,gBAAgB,GAAG,8CAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;oBACzE,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;wBACvE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;wBACZ,qBAAqB;wBACrB,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACxB,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;oBACV,qBAAqB;oBACrB,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;oBACxB,QAAQ,EAAE,mEAAa,CAAC,MAAM;oBAC9B,MAAM,EAAE,iEAAW,CAAC,KAAK;iBACxB,CAAC,CAAC,IAAI,CAAC;oBACN,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAClB,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;oBACZ,qBAAqB;oBACrB,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAc,GAAd,UAAe,WAAW;QAA1B,iBAYC;QAXC,MAAM,CAAC,2DAAU,CAAC,MAAM,CAAC,kBAAQ;YAC/B,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBAC9B,QAAQ,EAAE,mEAAa,CAAC,QAAQ;gBAChC,MAAM,EAAE,iEAAW,CAAC,QAAQ;aAC7B,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;gBACf,wBAAwB;gBACxB,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACb,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAY,GAAZ,UAAa,WAAgB;QAA7B,iBAUC;QATC,MAAM,CAAC,2DAAU,CAAC,MAAM,CAAC,kBAAQ;YAC/B,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,kBAAQ;gBAChD,2HAA2H;gBAC3H,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;gBACZ,qBAAqB;gBACrB,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAa,GAAb,UAAc,YAAmB;QAAjC,iBAUC;QATC,MAAM,CAAC,2DAAU,CAAC,MAAM,CAAC,kBAAQ;YAC/B,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAS,OAAO;gBAC3E,qCAAqC;gBACrC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzB,CAAC,EAAE,UAAS,KAAK;gBACf,2CAA2C;gBAC3C,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IACN,CAAC;IAED,6BAAM,GAAN;QACE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC;IAED,sBAAI,qCAAW;aAAf;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC;QACrD,CAAC;;;OAAA;IA1FH;QAHiC,mCAAmC;QAGnE,yEAAU,EAAE;mBAM2B,qEAAM,CAAC,iEAAW,CAAC;;oBAN9C;IA2Fb,mBAAC;AAAD,CAAC","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { NavController } from 'ionic-angular';\nimport { AuthProvider } from '../../providers/auth-provider';\nimport { SignupPage } from '../signup/signup'\nimport { ResetPasswordPage } from '../reset-password/reset-password' //Added reset password page\n \n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  loginForm: FormGroup;\n  email: AbstractControl;\n  password: AbstractControl;\n  error: any;\n  signupPage = SignupPage; \n  resetPasswordPage = ResetPasswordPage //Added reset password page\n \n  constructor(private navCtrl: NavController, private fb: FormBuilder, private auth: AuthProvider) {\n    this.loginForm = this.fb.group({  \n            'email': ['', Validators.compose([Validators.required, Validators.pattern(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)])],\n            'password': ['', Validators.compose([Validators.required, Validators.minLength(1)])]\n        });\n  \n    this.email = this.loginForm.controls['email'];     \n    this.password = this.loginForm.controls['password'];\n  }\n \n  loginWithGoogle(): void{\n    this.auth.loginWithGoogle().subscribe((success) => {\n      console.log(success);\n    }, err => {\n      console.log(err);\n    });\n  }\n \n  login(): void { \n      if(this.loginForm.valid) {\n        var credentials = ({email: this.email.value, password: this.password.value});\n        this.auth.loginWithEmail(credentials).subscribe(data => {\n          console.log(data);\n        }, error=>{\n          console.log(error);\n          if (error.code == 'auth/user-not-found')\n          {\n            alert('User not found');\n          }\n        });\n      }\n    }\n \n    logout(): void {\n      this.auth.logout();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 241;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/src/linker lazy\n// module id = 241\n// module chunks = 0","import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { AuthProvider } from '../../providers/auth-provider';\nimport { HomePage } from '../home/home';\n\n@Component({\n  selector: 'page-signup',\n  templateUrl: 'signup.html'\n})\nexport class SignupPage {\n  signupForm: FormGroup;\n  email: AbstractControl;\n  password: AbstractControl;\n  error: any;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private fb: FormBuilder, private auth: AuthProvider)\n  {\n    this.signupForm = this.fb.group({  \n      'email': ['', Validators.compose([Validators.required, Validators.pattern(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)])],\n      'password': ['', Validators.compose([Validators.required, Validators.minLength(1)])]\n    });\n \n    this.email = this.signupForm.controls['email'];     \n    this.password = this.signupForm.controls['password'];    \n  }\n\n  submit(): void { \n    if(this.signupForm.valid) {\n        var credentials = ({email: this.email.value, password: this.password.value});\n        this.auth.registerUser(credentials).subscribe(registerData => {\n            console.log(registerData);\n            alert('User is registered and logged in.');\n            this.navCtrl.setRoot(HomePage);\n        }, registerError => {\n          console.log(registerError);\n          if (registerError.code === 'auth/weak-password' || registerError.code === 'auth/email-already-in-use')\n          {\n            alert(registerError.message);\n          }\n          this.error = registerError;\n        });\n    }\n  } \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts","import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { AuthProvider } from '../../providers/auth-provider';\nimport { HomePage } from '../home/home';\n\n@Component({\n  selector: 'page-reset-password',\n  templateUrl: 'reset-password.html'\n})\nexport class ResetPasswordPage {\n  resetPasswordForm: FormGroup;\n  email: AbstractControl;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private fb: FormBuilder, private auth: AuthProvider)\n  {\n    this.resetPasswordForm = this.fb.group({  \n          'email': ['', Validators.compose([Validators.required, Validators.pattern(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)])]\n      });\n \n      this.email = this.resetPasswordForm.controls['email'];     \n  }\n\n  submit(): void { \n    if(this.resetPasswordForm.valid) {\n        this.auth.resetPassword(this.email.value).subscribe(registerData => {\n            alert('Password recovery link is sent.');\n            this.navCtrl.setRoot(HomePage);\n        }, registerError => {\n          console.log(registerError);\n          if (registerError.code === 'auth/user-not-found')\n          {\n            alert(registerError.message);\n          }\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { SignupPage } from '../pages/signup/signup'; \nimport { ResetPasswordPage } from '../pages/reset-password/reset-password'; //Added reset password page\nimport { AngularFireModule } from 'angularfire2';\nimport { AuthProvider} from '../providers/auth-provider' \n\nexport const firebaseConfig = {\n  apiKey: 'AIzaSyBXRDa-lOPEnnYQ_msQi92LlakSqi3TLgM',\n  authDomain: 'project1-98ee0.firebaseapp.com',\n  databaseURL: 'https://project1-98ee0.firebaseio.com',\n  storageBucket: 'project1-98ee0.appspot.com',\n  messagingSenderId: '616770170198'\n};\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    SignupPage,\n    ResetPasswordPage //Added reset password page\n  ],\n  imports: [\n    IonicModule.forRoot(MyApp),\n    AngularFireModule.initializeApp(firebaseConfig)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    SignupPage,\n    ResetPasswordPage //Added reset password page\n  ],\n  providers: [{provide: ErrorHandler, useClass: IonicErrorHandler}, AuthProvider]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar, Splashscreen } from 'ionic-native';\n\nimport { HomePage } from '../pages/home/home';\nimport { AuthProvider } from '../providers/auth-provider';\n\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage = HomePage;\n  \n  constructor(platform: Platform, public auth: AuthProvider) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      StatusBar.styleDefault();\n      Splashscreen.hide();\n\n      //Check if user is authenticated\n      auth.onAuth.subscribe((authState)=>{\n        if (authState){\n          console.log('Logged in user :', authState.auth.email);\n        }\n      }); \n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable, EventEmitter, Inject } from '@angular/core';\nimport { AuthProviders, AngularFire, FirebaseAuthState, AuthMethods, FirebaseApp } from 'angularfire2'; //Add FirebaseApp\nimport { Observable } from \"rxjs/Observable\";\nimport { Platform } from 'ionic-angular';\nimport { GooglePlus } from 'ionic-native';\nimport { auth } from 'firebase'; //needed for the GoogleAuthProvider\n \n \n@Injectable()\nexport class AuthProvider {\n  private authState: FirebaseAuthState;\n  public onAuth: EventEmitter<FirebaseAuthState> = new EventEmitter();\n  public firebase : any;\n   \n  constructor(private af: AngularFire, @Inject(FirebaseApp)firebase: any,private platform: Platform) { //Add platform\n    this.firebase = firebase;  \n    this.af.auth.subscribe((state: FirebaseAuthState) => {\n      this.authState = state;\n      this.onAuth.emit(state);\n    });\n  }\n \n  loginWithGoogle() {\n    return Observable.create(observer => {\n      if (this.platform.is('cordova')) {\n       return GooglePlus.login({\n          'webClientId':'616770170198-1umck9055ugpi7bvhafvj03m2kep9jcm.apps.googleusercontent.com' //your Android reverse client id\n        }).then(userData => {\n          var token = userData.idToken;\n          const googleCredential = auth.GoogleAuthProvider.credential(token, null);\n          this.firebase.auth().signInWithCredential(googleCredential).then((success)=>{\n            observer.next(success);\n          }).catch(error => {\n            //console.log(error);\n            observer.error(error);\n          });\n        }).catch(error => {\n            //console.log(error);\n            observer.error(error);\n        });\n      } else {\n        return this.af.auth.login({\n          provider: AuthProviders.Google,\n          method: AuthMethods.Popup\n          }).then(()=>{\n            observer.next();\n          }).catch(error => {\n            //console.log(error);\n            observer.error(error);\n        });\n      }\n    });\n  }\n \n  loginWithEmail(credentials) {\n    return Observable.create(observer => {\n      this.af.auth.login(credentials, {\n        provider: AuthProviders.Password,\n        method: AuthMethods.Password\n      }).then((authData) => {\n        //console.log(authData);\n        observer.next(authData);\n      }).catch((error) => {\n        observer.error(error);\n      });\n    });\n  }\n \n  registerUser(credentials: any) {\n    return Observable.create(observer => {\n      this.af.auth.createUser(credentials).then(authData => {\n        //authData.auth.updateProfile({displayName: credentials.displayName, photoURL: credentials.photoUrl}); //set name and photo\n        observer.next(authData);\n      }).catch(error => {\n        //console.log(error);\n        observer.error(error);\n      });\n    });\n  }\n   \n  resetPassword(emailAddress:string){\n    return Observable.create(observer => {\n      this.firebase.auth().sendPasswordResetEmail(emailAddress).then(function(success) {\n          //console.log('email sent', success);\n          observer.next(success);\n        }, function(error) {\n          //console.log('error sending email',error);\n          observer.error(error);\n        });\n     });\n  }\n \n  logout() {\n    this.af.auth.logout();\n  }\n \n  get currentUser():string{\n    return this.authState?this.authState.auth.email:'';\n  } \n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth-provider.ts"],"sourceRoot":""}